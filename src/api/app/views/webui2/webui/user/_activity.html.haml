- percentiles = contributions_percentiles(activity_hash.values)

.card.mb-3
  .card-body
    .h5
      - number_of_contributions = activity_hash.values.sum
      = pluralize(number_of_contributions, 'contribution')
      in the last year
    %table.table#contributors-table
      - 7.times do |week_day|
        %tr
          %td.week-day= Date::ABBR_DAYNAMES[(week_day + 1) % 7]
          - 53.times do |week_number|
            - current_day = first_day + week_number * 7 + week_day

            - if current_day > last_day
              %td
            - else
              :ruby
                activity = activity_hash.fetch(current_day, 0)
                classname = activity_classname(activity, percentiles)

              %td{ title: "#{current_day} - #{activity} contributions", class: classname }
                - if activity > 0
                  = link_to(user_show_path(user, params: { date: current_day }), class: 'activity-link') do
                    &nbsp;
                - else
                  &nbsp;

    - if date
      .h5
        Contributions on #{date}
      - if activities_per_date[:commits].present?
        - max_projects = 3
        .h6.mt-3
          = pluralize(activities_per_date[:commits].map { |c| c[2] }.sum, 'commit')
        .m-2.ml-3
          - activities_per_date[:commits][0..(max_projects-1)].each do |project,packages,count|
            .m-0
              #{count} commits in #{link_to(project, project_show_path(project)) }
              %ul.m-1
                - max_packages = 4
                - packages = packages.sort_by { |_,c| -c }
                - packages[0..(max_packages-1)].each do |package,pcount|
                  %li
                    #{pcount} commits in
                    = link_to package, package_show_path(project, package)
                  - count -= pcount
                - diff = packages.size - max_packages
                - if diff > 0
                  %li
                    and #{count} commits in #{diff} packages more 
          - count = activities_per_date[:commits].size - max_projects
          = "and in #{pluralize(count, 'project')} more" if count > 0

      - max_count = 12
      - if activities_per_date[:requests_created].present?
        .h6.mt-3
          = pluralize(activities_per_date[:requests_created].size, 'request')
          created
        .m-2.ml-3
          - count = activities_per_date[:requests_created].size - max_count
          - activities_per_date[:requests_created][0..(max_count-1)].each do |number|
            = link_to(number, request_show_path(number))
          = "and #{count} more" if count > 0
      - if activities_per_date[:requests_reviewed].present?
        .h6.mt-3
          = pluralize(activities_per_date[:requests_reviewed].values.sum, 'review')
          done
        .m-2.ml-3
          in requests:
          - count = activities_per_date[:requests_reviewed].size - max_count
          - activities_per_date[:requests_reviewed].keys[0..(max_count-1)].each do |number|
            = link_to(number, request_show_path(number))
          = "and #{count} more" if count > 0

      - if activities_per_date[:comments] > 0
        .h6.mt-3
          = pluralize(activities_per_date[:comments], 'comment')
          written
