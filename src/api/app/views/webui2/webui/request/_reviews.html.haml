- request.reviews.each do |r|
  .media
    - if r.creator
      = user_image_tag(User.find_by_login(r.creator), size: 35, css_class: 'mr-3 d-none d-sm-block')
    - else
      = user_image_tag(User.get_default_admin, size: 35, css_class: 'mr-3 d-none d-sm-block')
    .media-body
      %p
        - if r.creator
          = link_to(r.creator, user_show_path(r.creator))
          opened review
        - else
          project opened review

        - if r.by_package
          for package
          = link_to(r.by_package, package_show_path(project: r.by_project, package: r.by_package))
        - elsif r.by_project
          for project
          = link_to(r.by_project, project_show_path(project: r.by_project))
        - elsif r.by_user
          for user
          = link_to(r.by_user, user_show_path(r.by_user))
        - else
          for group
          = link_to(r.by_group, group_show_path(r.by_group))

        %u{ title: l(r.created_at.utc) }
          #{time_ago_in_words(r.created_at)} ago
      - r.history_elements.each do |review_history|
        .media
          = user_image_tag(review_history.user, size: 35, css_class: 'mr-3 d-none d-sm-block')
          .media-body
            %p
              = link_to(review_history.user, user_show_path(review_history.user))
              = review_history_verb(review_history)
              the review
              %u{ title: l(review_history.created_at.utc) }
                #{time_ago_in_words(review_history.created_at)} ago
            - if review_history.comment.present?
              = render_as_markdown(review_history.comment)
            - else
              %p
                %i
                  no comment

      - if r.state == 'new'
        %i
          still open
